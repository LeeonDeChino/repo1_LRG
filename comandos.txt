Comandos de terminal

pwd - print working directory

touch - crear archivos

mkdir - crear carpetas

ls - lista los archivos y carpetas del directorio actual
  ls -l - lista los detalles de los archivos y carpetas
  ls -a - lista todos los archivos, incluyendo los ocultos

  clear - limpia la terminal

  cd [ruta] - change directory / cambia el directorio en el que estamos trabajando
    cd .. - sube un nivel en la carpeta que te encuentres, para subir 3 niveles: cd ../../../
    cd / - sube directamente a la raíz del directorio.
    cd ~ - sube al directorio home del usuario actual

    rm [nombre] - eliminar archivos
    rmdir [nombre] - elimina carpetas (vacías)
    rm -r - nos permite eliminar carpetas y su contenido

GitHub

    git init - se inicializa (solo la primera vez)

    git config --list = lista la configuración de git
      Enter hasta terminar.
      Presionar Q para salir.

    git add [nombre] - agrega un archivo específico
    git add . - agrega todos

    git commit - m "Mensaje" - Commitea con un mensaje personalizado

    git status - despliega el status de Git de tus archivos

    git log - despliega el historial de los commits

    git remote -v - nos indica la dirección del repositorio (fetch and push)

    Dentro del archivo .gitignore, escribimos el asterisco seguido de la extensión que queremos bloquear, por ejemplo: *.exe bloqueará los archivos con esa extensión.
    
    Para carpetas, escribiremos el nombre de la carpeta segido de la barra /. Por ejemplo: ejecutables/

    Para permitir archivos específicos que tengan extensión bloqueada pero sí querramos subir, usaremos el signo de negación "!". Por ejemplo: !ejecutableBueno.exe 

    git branch nombredelarama - nos crea una nueva branch

    git checkout nombredelarama - cambiamos de rama

    git push origin nombredelarama - sube la rama al repo

    git push origin --delete nombredelarama - borra la rama del repo
    